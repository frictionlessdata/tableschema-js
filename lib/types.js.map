{"version":3,"sources":["../src/types.js"],"names":[],"mappings":"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","file":"types.js","sourcesContent":["import * as _ from 'underscore'\nimport * as utilities from './utilities'\n\nconst moment = require('moment')\n// FIXME: the order is manner, why? probably need to find better way to check\n// what type of the current value is\n  , typeNames = [\n    'BooleanType'\n    , 'IntegerType'\n    , 'NullType'\n    , 'DateType'\n    , 'TimeType'\n    , 'DateTimeType'\n    , 'ArrayType'\n    , 'ObjectType'\n    , 'GeoPointType'\n    , 'GeoJSONType'\n    , 'NumberType'\n    , 'StringType'\n    , 'AnyType'\n  ]\n\nfunction AbstractType(field) {\n  this.js = typeof null\n  this.name = ''\n  this.format = 'default'\n  this.required = true\n  this.formats = ['default']\n\n  // `field` is the field schema.\n  this.field = field\n\n  if (this.field) {\n    this.format = this.field.format\n    this.required = _.result(this.field.constraints, 'required') || false\n  }\n  return this\n}\n\nAbstractType.prototype = {\n  /**\n   * Check if `value` can be cast as type `this.js`\n   *\n   * @param value\n   * @returns {Boolean}\n   */\n  cast(value) {\n    let format\n\n    // We can check on `constraints.required` before we cast\n    if (!this.required &&\n        _.contains(_.flatten([null, utilities.NULL_VALUES]), value)) {\n      return true\n    } else if (this.required && _.contains([null, undefined, ''], value)) {\n      return false\n    }\n\n    // Cast with the appropriate handler, falling back to default if none\n    if (!this.format) {\n      format = 'default'\n    } else {\n      if (this.format.indexOf('fmt') === 0) {\n        format = 'fmt'\n      } else {\n        format = this.format\n      }\n    }\n\n    const handler = `cast${format.charAt(0).toUpperCase() +\n                           format.substring(1)}`\n\n    if (this.hasFormat(format) && this[handler]) {\n      return this[handler](value)\n    }\n\n    return this.castDefault(value)\n  }\n  /**\n   * Check if the value can be cast to the type/format\n   *\n   * @param value\n   * @returns {Boolean}\n   */\n  , castDefault(value) {\n    if (this.typeCheck(value)) {\n      return true\n    }\n\n    try {\n      if (_.isFunction(this.js)) {\n        return this.js(value)\n      }\n    } catch (e) {\n      return false\n    }\n    return false\n  }\n  , hasFormat(format) {\n    return !!_.contains(this.formats, format)\n  }\n  /**\n   * Type check of value\n   *\n   * @param value\n   * @returns {boolean}\n   */\n  , typeCheck(value) {\n    return !!(value instanceof this.js)\n  }\n}\n\nfunction StringType(field) {\n  AbstractType.call(this, field)\n\n  this.js = 'string'\n  this.name = 'string'\n  this.formats = ['default', 'email', 'uri', 'binary']\n  this.emailPattern = new RegExp('[^@]+@[^@]+\\\\.[^@]+')\n  this.uriPattern = new RegExp('^http[s]?://')\n\n  return this\n}\n\nStringType.prototype = _.extend(\n  {}\n  , AbstractType.prototype\n  , {\n    castEmail(value) {\n      if (!this.typeCheck(value)) {\n        return false\n      }\n\n      if (!this.emailPattern.exec(value)) {\n        return false\n      }\n      return value\n    }\n    , castUri(value) {\n      if (!this.typeCheck(value)) {\n        return false\n      }\n\n      if (!this.uriPattern.exec(value)) {\n        return false\n      }\n\n      return value\n    }\n    , castBinary(value) {\n      if (!this.typeCheck(value)) {\n        return false\n      }\n\n      try {\n        return (new Buffer(value, 'base64')).toString()\n      } catch (e) {\n        return false\n      }\n    }\n    , typeCheck(value) {\n      return typeof value === 'string'\n    }\n  }\n)\n\nfunction IntegerType(field) {\n  AbstractType.call(this, field)\n\n  this.js = Number\n  this.name = 'integer'\n\n  return this\n}\n\nIntegerType.prototype = _.extend(\n  {}\n  , AbstractType.prototype\n  , {\n    castDefault(value) {\n      return Number(value) == value && value % 1 === 0\n    }\n  })\n\nfunction NumberType(field) {\n  AbstractType.call(this, field)\n\n  this.js = Number\n  this.name = 'number'\n  this.formats = ['default', 'currency']\n\n  return this\n}\n\nNumberType.prototype = _.extend(\n  {}\n  , AbstractType.prototype\n  , {\n    castDefault(value) {\n      return Number(value) == value && value % 1 !== 0\n    }\n    , castCurrency(value) {\n      const v = String(value)\n        .replace(new RegExp('[.,;$€]', 'g'), '')\n\n      // parseFloat() parse string even if there are non-digit characters\n      if ((new RegExp('[^\\\\d]+', 'g')).exec(v)) {\n        return false\n      }\n\n      try {\n        return isFinite(parseFloat(v))\n      } catch (e) {\n        return false\n      }\n    }\n  })\n\nfunction BooleanType(field) {\n  AbstractType.call(this, field)\n\n  this.js = Boolean\n  this.name = 'boolean'\n  this.trueValues = utilities.TRUE_VALUES\n  this.falseValues = utilities.FALSE_VALUES\n\n  return this\n}\n\nBooleanType.prototype = _.extend(\n  {}\n  , AbstractType.prototype\n  , {\n    castDefault(value) {\n      if (this.typeCheck(value)) {\n        return true\n      }\n\n      const v = value.trim().toLowerCase()\n\n      return !!_.contains(_.union(this.trueValues, this.falseValues), v)\n    }\n  })\n\nfunction NullType(field) {\n  AbstractType.call(this, field)\n\n  this.name = 'null'\n  this.nullValues = utilities.NULL_VALUES\n\n  return this\n}\n\nNullType.prototype = _.extend(\n  {}\n  , AbstractType.prototype\n  , {\n    castDefault(value) {\n      if (_.isNull(value)) {\n        return true\n      }\n      const v = value.trim().toLowerCase()\n      return !!_.contains(this.nullValues, v)\n    }\n  })\n\nfunction ArrayType(field) {\n  AbstractType.call(this, field)\n\n  this.js = Array\n  this.name = 'array'\n\n  return this\n}\n\nArrayType.prototype = _.extend(\n  {}\n  , AbstractType.prototype\n  , {\n    castDefault(value) {\n      if (this.typeCheck(value)) {\n        return true\n      }\n\n      try {\n        return this.typeCheck(JSON.parse(value))\n      } catch (e) {\n        return false\n      }\n    }\n  })\n\nfunction ObjectType(field) {\n  AbstractType.call(this, field)\n\n  this.js = Object\n  this.name = 'object'\n\n  return this\n}\n\nObjectType.prototype = _.extend(\n  {}\n  , AbstractType.prototype\n  , {\n    castDefault(value) {\n      if (_.isObject(value) && !_.isArray(value) && !_.isFunction(value)) {\n        return true\n      }\n\n      try {\n        return JSON.parse(value) instanceof this.js\n      } catch (e) {\n        return false\n      }\n    }\n  })\n\nfunction DateType(field) {\n  AbstractType.call(this, field)\n\n  this.js = Object\n  this.name = 'date'\n  this.formats = ['default', 'any', 'fmt']\n  this.ISO8601 = 'YYYY-MM-DD'\n\n  return this\n}\n\nDateType.prototype = _.extend(\n  {}\n  , AbstractType.prototype\n  , {\n    castAny(value) {\n      let date\n\n      try {\n        date = moment(new Date(value))\n      } catch (e) {\n        return false\n      }\n\n      if (date.isValid()) {\n        return date\n      }\n\n      return false\n    }\n\n    , castDefault(value) {\n      let date\n\n      try {\n        date = moment(value, this.ISO8601, true)\n      } catch (e) {\n        return false\n      }\n\n      if (date.isValid()) {\n        return date\n      }\n\n      return false\n    }\n\n    , castFmt(value) {\n      let date\n\n      try {\n        date = moment(value, this.format.replace(/^fmt:/, ''), true)\n      } catch (e) {\n        return false\n      }\n\n      if (date.isValid()) {\n        return date\n      }\n\n      return false\n    }\n  })\n\nfunction TimeType(field) {\n  AbstractType.call(this, field)\n\n  this.js = Object\n  this.name = 'time'\n  this.formats = ['default', 'any', 'fmt']\n\n  return this\n}\n\nTimeType.prototype = _.extend(\n  {}\n  , DateType.prototype\n  , {\n    castDefault(value) {\n      let date\n\n      try {\n        date = moment(value, 'HH:mm:ss', true)\n      } catch (e) {\n        return false\n      }\n\n      if (date.isValid()) {\n        return date\n      }\n\n      return false\n    }\n  })\n\nfunction DateTimeType(field) {\n  AbstractType.call(this, field)\n\n  this.js = Object\n  this.name = 'datetime'\n  this.formats = ['default', 'any', 'fmt']\n  this.ISO8601 = moment.ISO_8601\n\n  return this\n}\n\nDateTimeType.prototype = _.extend({}, DateType.prototype)\n\nfunction GeoPointType(field) {\n  AbstractType.call(this, field)\n\n  this.name = 'geopoint'\n  this.formats = ['default', 'array', 'object']\n\n  return this\n}\n\nGeoPointType.prototype = _.extend(\n  {}\n  , AbstractType.prototype\n  , {\n    castDefault(value) {\n      if (!this.typeCheck(value)) {\n        return false\n      }\n\n      if (_.isString(value)) {\n        return value.split(',').length === 2\n      }\n\n      if (_.isObject(value)) {\n        return value\n      }\n\n      try {\n        return JSON.parse(value)\n      } catch (e) {\n        return false\n      }\n    }\n\n    , castArray() {\n      throw new Error('Not implemented')\n    }\n    , castObject() {\n      throw new Error('Not implemented')\n    }\n\n    // Geo point may be passed as string object with keys or array\n    , typeCheck(value) {\n      return _.isString(value) || _.isArray(value) || _.keys(value).length\n    }\n  })\n\nfunction GeoJSONType(field) {\n  AbstractType.call(this, field)\n\n  this.js = Object\n  this.name = 'geojson'\n  this.formats = ['default', 'topojson']\n\n  this.spec = {\n    types: [\n      'Point'\n      , 'MultiPoint'\n      , 'LineString'\n      , 'MultiLineString'\n      , 'Polygon'\n      , 'MultiPolygon'\n      , 'GeometryCollection'\n      , 'Feature'\n      , 'FeatureCollection'\n    ]\n  }\n\n  return this\n}\n\nGeoJSONType.prototype = _.extend(\n  {}\n  , AbstractType.prototype\n  , {\n    castDefault: GeoPointType.prototype.castDefault\n\n    , castTopojson() {\n      throw new Error('Not implemented')\n    }\n\n    // Geo JSON is always an object\n    , typeCheck(value) {\n      return _.isObject(value) && !_.isFunction(value)\n    }\n  })\n\nfunction AnyType(field) {\n  AbstractType.call(this, field)\n\n  this.name = 'any'\n\n  return this\n}\n\nAnyType.prototype = _.extend(\n  {}\n  , AbstractType.prototype\n  , {\n    cast() {\n      return true\n    }\n  })\n\n/**\n * Guess the type for a value\n *\n * @param options - TODO add description\n */\nfunction TypeGuesser(options) {\n  const typeOptions = options || {}\n\n  this.multiCast = function multiCast(values) {\n    const types = suitableTypes(values)\n      , suitableType = _.find(typeNames, type => _.indexOf(types, type) !== -1)\n    return (new exports[suitableType]()).name\n  }\n\n  this.cast = function cast(value) {\n    try {\n      return [\n        (new (_.find(availableTypes(), (T =>\n            new exports[T](typeOptions[(new exports[T]()).name] || {})\n              .cast(value)\n        )))()).name\n        , 'default'\n      ]\n    } catch (e) {\n      return null\n    }\n  }\n\n  return this\n\n  /**\n   * Return available types objects\n   *\n   * @returns {Array}\n   */\n  function availableTypes() {\n    return typeNames.map(type => exports[type])\n  }\n\n  /**\n   * Return types suitable to the provided multiple values\n   *\n   * @param values\n   * @returns {Array}\n   */\n  function suitableTypes(values) {\n    const filtered = values.filter(v => !_.isUndefined(v) || _.isEmpty(v))\n\n    if (filtered.length === 0) {\n      return ['AnyType']\n    }\n\n    const typeList = filtered.map(value => typeNames.filter(\n      T => {\n        const typeName = (new exports[T]()).name\n        return (new exports[T](typeOptions[typeName] || {})).cast(value)\n      }, this))\n    return _.reduce(typeList, (memo, types) => _.intersection(memo, types))\n  }\n}\n\nfunction TypeResolver() {\n  return this\n}\n\nTypeResolver.prototype = {\n  get(results) {\n    const counts = {}\n      , variants = _.uniq(results)\n\n    // Only one candidate... that's easy.\n    if (variants.length === 1) {\n      return { type: results[0][0], format: results[0][1] }\n    }\n\n    results.forEach((result) => {\n      counts[result] = (counts[result] || 0) + 1\n    })\n\n    // Tuple representation of  `counts`  dict, sorted  by  values  of\n    // `counts`\n    const sortedCounts = _.sortBy(_.pairs(counts), (cnt) => cnt[1]).reverse()\n\n    return {\n      type: sortedCounts[0][0].split(',')[0]\n      , format: sortedCounts[0][0].split(',')[1]\n    }\n  }\n}\n\nexports = module.exports = {\n  AnyType\n  , StringType\n  , IntegerType\n  , NumberType\n  , BooleanType\n  , NullType\n  , ArrayType\n  , ObjectType\n  , DateType\n  , TimeType\n  , DateTimeType\n  , GeoPointType\n  , GeoJSONType\n  , TypeGuesser\n}\n"]}